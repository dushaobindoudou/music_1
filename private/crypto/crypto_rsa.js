/***	测试rsa，可能性能很差，后来在优化吧,开启一个子线程*****/var rsaCrypto = require('./rsa.js');var fs = require('fs');var path = require('path');var RSAKey = rsaCrypto.RSAKey;//配置 信息var rsaConfig = {	rsa_n:"",	rsa_d:"",	rsa_p:"",	rsa_dmp1:"",	rsa_dmq1:"",	rsa_coeff:"",	rsa_bits:"1024",	rsa_e:"65537"};var dirPath = '/private/crypto/config.cyp';dirPath = path.join(process.env.PWD,dirPath);//获取配置var getConfig = function(){	if(fs.existsSync(dirPath)){		//readfile		rsaConfig = JSON.parse(fs.readFileSync(dirPath));		return rsaConfig;	}else{		updateRsaConf(rsaConfig.rsa_bits,rsaConfig.rsa_e);		fs.writeFile(dirPath,JSON.stringify(rsaConfig));	}	return rsaConfig;}//更新保存配置var saveConfig = function(){	if(!dirPath){		return;	}	updateRsaConf(rsaConfig.rsa_bits,rsaConfig.rsa_e);	fs.writeFile(dirPath,JSON.stringify(rsaConfig));}var updateRsaConf = function(bits,e){	if(!bits || !e){		return false;	}	var rsa = new RSAKey();	try{		rsa.generate(parseInt(bits),e)		rsaConfig.rsa_n = rsa.n.toString(16);		rsaConfig.rsa_d = rsa.d.toString(16);		rsaConfig.rsa_p = rsa.p.toString(16);		rsaConfig.rsa_q = rsa.q.toString(16);		rsaConfig.rsa_dmp1 = rsa.dmp1.toString(16);		rsaConfig.rsa_dmq1 = rsa.dmq1.toString(16);		rsaConfig.rsa_coeff = rsa.coeff.toString(16);		return true;	}catch(e){		return false;	}}var rsaEncrypt = function(message){	if(!message){		return;	}	var rsa = new RSAKey();	try{		if(!rsaConfig.rsa_n){			getConfig();		}		rsa.setPublic(rsaConfig.rsa_n,rsaConfig.rsa_e);		var res = rsa.encrypt(message);		if(res){			return res;		}	}catch(e){		return false;	};}var rsaDecrypt = function(crypedMsg){	if(!crypedMsg){		return;	}	var rsa = new RSAKey();	if(!rsaConfig.rsa_n){		getConfig();	}	try{		rsa.setPrivateEx(rsaConfig.rsa_n,rsaConfig.rsa_e,rsaConfig.rsa_d,rsaConfig.rsa_p,rsaConfig.rsa_q,rsaConfig.rsa_dmp1,rsaConfig.rsa_dmq1,rsaConfig.rsa_coeff);		var res = rsa.decrypt(crypedMsg);		return res;	}catch(e){		return false;	}}module.exports = {	updateRsaConf:updateRsaConf,	rsaEncrypt:rsaEncrypt,	rsaDecrypt:rsaDecrypt,	getConfig:getConfig,	saveConfig:saveConfig}